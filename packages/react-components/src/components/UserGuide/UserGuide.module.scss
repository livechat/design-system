@use './styles/transitions';

@import '../../utils/StackingContextLevel';

$base-class: 'user-guide';
$radius: var(--radius-3);
$arrow-size: 45px;

.#{$base-class} {
  z-index: $stacking-context-level-tooltip;
  border: 1px solid var(--tooltip-border);
  border-radius: $radius;
  box-shadow: var(--shadow-tooltip);
  background-color: var(--tooltip-background-basic);
  padding: var(--spacing-3);
  max-width: 320px;
  color: var(--content-basic-primary);
  font-size: inherit;

  &__overlay {
    position: fixed;
    inset: 0;
    background-color: rgb(19 19 23 / 50%);
  }

  &__floating {
    @include transitions.durations();

    transition-property: top, bottom, left, right;
    transition-timing-function: ease-in-out;
  }

  &__guide {
    position: relative;

    &__arrow {
      @include transitions.durations();

      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      transition-property: top, left, transform;
      transition-timing-function: ease-in-out;

      &--right-start {
        top: calc(0px - $arrow-size + #{$arrow-size / 2});
      }

      &--right {
        top: calc(50% - #{$arrow-size / 2});
        transform: rotate(-45deg);
      }

      &--right-end {
        top: calc(100% - #{$arrow-size / 2});
        transform: rotate(-90deg);
      }

      &--bottom-start,
      &--bottom,
      &--bottom-end {
        top: calc(0px - #{$arrow-size});
      }

      &--bottom-start {
        left: calc(0px + #{$arrow-size} - #{$arrow-size / 2});
      }

      &--bottom {
        left: calc(50% - #{$arrow-size / 2});
        transform: rotate(45deg);
      }

      &--bottom-end {
        left: calc(100% - #{$arrow-size} - #{$arrow-size / 2});
        transform: rotate(90deg);
      }

      &--top-start,
      &--top,
      &--top-end {
        top: 100%;
      }

      &--top-start {
        left: calc(0px + #{$arrow-size} - #{$arrow-size / 2});
        transform: rotate(-90deg);
      }

      &--top {
        left: calc(50% - #{$arrow-size / 2});
        transform: rotate(-135deg);
      }

      &--top-end {
        left: calc(100% - #{$arrow-size} - #{$arrow-size / 2});
        transform: rotate(-180deg);
      }

      &--left-start,
      &--left,
      &--left-end {
        left: calc(100% - $arrow-size);
      }

      &--left-start {
        top: calc(0px - $arrow-size + #{$arrow-size / 2});
        transform: rotate(90deg);
      }

      &--left {
        top: calc(50% - #{$arrow-size / 2});
        left: calc(100% - $arrow-size);
        transform: rotate(135deg);
      }

      &--left-end {
        top: calc(100% - #{$arrow-size / 2});
        transform: rotate(180deg);
      }
    }

    &__content {
      @include transitions.durations();

      transition-property: margin;
      transition-timing-function: ease-in-out;
      opacity: 0;
      margin: 0;
      animation: var(--transition-duration-moderate-1) fade-in
        var(--transition-duration-moderate-2) forwards;

      &--right-start,
      &--right,
      &--right-end {
        margin-left: $arrow-size;
      }

      &--right-start {
        margin-top: $arrow-size;
      }

      &--right-end {
        margin-bottom: $arrow-size;
      }

      &--bottom-start,
      &--bottom,
      &--bottom-end {
        margin-top: $arrow-size;
      }

      &--bottom-start {
        margin-left: $arrow-size;
      }

      &--bottom-end {
        margin-right: $arrow-size;
      }

      &--top-start,
      &--top,
      &--top-end {
        margin-bottom: $arrow-size;
      }

      &--top-start {
        margin-left: $arrow-size;
      }

      &--top-end {
        margin-right: $arrow-size;
      }

      &--left-start,
      &--left,
      &--left-end {
        margin-right: $arrow-size;
      }

      &--left-start {
        margin-top: $arrow-size;
      }

      &--left-end {
        margin-bottom: $arrow-size;
      }
    }
  }

  &__cursor {
    transition: transform ease-in-out 0.2s;

    &--bottom {
      transform: rotate(0deg);
    }

    &--left {
      transform: rotate(-45deg);
    }

    &--right {
      transform: rotate(45deg);
    }
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
